# Convert an `_interaction.csv` file (generated by our
# `parsor.py` script) into a GMT Gene Set Format file.
#
# Mestivier Denis - Mars 2022
#

import sys
import gzip

###################################################################
###
### Main
###
###################################################################

# command line

if len( sys.argv )!=2:
    print("Syntax: %s interaction.csv.gz" % sys.argv[0] )
    #print("Syntax: %s interaction.csv" % sys.argv[0] )
    sys.exit(1)

# dico for metabolite.
#  - key = metabolite / val = [ genes ] 

d = {}

# Parsing
fid = gzip.open( sys.argv[1], "rt" )
#fid = open( sys.argv[1], "rt" )

# header
h = fid.readline()

# go
for lig in fid:
    cols = lig[:-1].split("\t")
    
    hmdbid   = cols[0]
    hmdbname = cols[1]
    genename = cols[2]
    uniprot  = cols[3]

    # store
    if hmdbid not in d.keys():
        d[ hmdbid ] = {}
        d[ hmdbid ]["name"] = '"' + hmdbname + '"' # add quote just in case
        d[ hmdbid ]["GS"] = []
    
    if genename != "NOT-PROVIDED":
        # do not duplicate genename 
        if genename not in d[ hmdbid ]["GS"]:
            d[ hmdbid ]["GS"].append( genename )

# close
fid.close()

# Export du dico
sep  = "\t"

for mi in d.keys():
    # if GS is not empty
    if len( d[mi]["GS"] )>=1:
        oo  = d[mi]["name"]  # col1: description
        oo += sep + "https://hmdb.ca/metabolites/" + mi
        for gi in d[mi]["GS"]:
            oo += sep + gi # col3+: genes

        print(oo)
